
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

// контекст фреймворка Vanessa-Behavior
Перем Ванесса;

// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрылНовыйСеансThickTestClient()","ЯОткрылНовыйСеансThickTestClient","Дано Я открыл новый сеанс ThickTestClient");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрылСеансThickTestClient()","ЯЗакрылСеансThickTestClient","И Я закрыл сеанс ThickTestClient");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрылНовыйСеансThickTestClientОтИмени(Парам01)","ЯОткрылНовыйСеансThickTestClientОтИмени","Дано Я открыл новый сеанс ThickTestClient от имени ""Пользователь""");

	Возврат ВсеТесты;
КонецФункции
	
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакет(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

//Дано Я открыл новый сеанс ThickTestClient
//@ЯОткрылНовыйСеансThickTestClient()
Процедура ЯОткрылНовыйСеансThickTestClient() Экспорт
	ЗапуститьСеанс();
КонецПроцедуры

//Дано Я открыл новый сеанс ThickTestClient от имени "Пользователь"
//@ЯОткрылНовыйСеансThickTestClientОтИмени(Парам01)
Процедура ЯОткрылНовыйСеансThickTestClientОтИмени(ИмяПользователя) Экспорт
	ЗапуститьСеанс(ИмяПользователя);
КонецПроцедуры

//И Я закрыл сеанс ThickTestClient
//@ЯЗакрылСеансThickTestClient()
Процедура ЯЗакрылСеансThickTestClient() Экспорт
	Контекст.ТестовоеПриложение.ПрекратитьРаботуСистемы();
	Контекст.Удалить("ТестовоеПриложение");
КонецПроцедуры

///////////////////////////////////////////////////
//Служебные процедуры и функции
///////////////////////////////////////////////////

Процедура ЗапуститьСеанс(Знач ИмяПользователя = "")
	
	ТестовоеПриложение = Новый COMObject("V83.Application");
	Контекст.Вставить("ТестовоеПриложение", ТестовоеПриложение);
	
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	Если Не ПустаяСтрока(ИмяПользователя) Тогда
		СтрокаСоединения = СтрокаСоединения + "Usr=""" + ИмяПользователя + """;";
	КонецЕсли;
	
	Если Не ТестовоеПриложение.Connect(СтрокаСоединения) Тогда
		ВызватьИсключение "Не смог подключить ThickTestClient!";
	КонецЕсли;
	
	ТестовоеПриложение.Visible = Истина;
	ТестовоеПриложение.УстановитьЗаголовокСистемы("Клиент тестирования");
	ТестовоеПриложение.ПараметрыПриложения.Вставить("АвтоТест", Истина);
	ТестовоеПриложение.ПодключитьОбработчикОжидания("Подключаемый_АвтоТест", 1);
	
	Контекст.Вставить("Заголовок1С", "1С:Предприятие - Клиент тестирования");
	
	WshShell = Новый COMОбъект("WScript.Shell");
	WshShell.AppActivate(Контекст.Заголовок1С);
	
КонецПроцедуры
